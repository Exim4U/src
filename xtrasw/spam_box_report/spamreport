#!/bin/sh
#
# Spam Box Report
#
# Copyright (c) 2010 MailHub4U.com, LLC
#
# This report should be run from cron.daily by simply copying this file into /etc/cron.daily.
#
# For report to work properly, seven variables must be specified as follows; "mailcommand", "webmailurl", "fromadd", "spamfolder", "mysql_uname", "MYSQL_PWD", "mysql_dbase".
#
mailcommand=/usr/bin/nail          # Should be mailx or nail from Heirloom project.
# mailcommand=/usr/local/bin/mailx   # Should be mailx or nail from Heirloom project.
#
# Specify webmail url:
webmailurl="https://hostname.tld/webmail";
#
# Specify the email address that the spam report is to be sent from:
fromadd="postmaster@hostname.tld";
#
#  Put the IMAP file name of your spambox folder here:
spamfolder=".INBOX.spam"
#
# Specify the mysql user name, msql password and mysql database name:
mysql_uname="exim4u";
export MYSQL_PWD="CHANGE";
mysql_dbase="exim4u";
#
# Read The Database values - username is email address, smtp is file path to mail directory and on_spamboxreport turns the report on.
echo "select username, smtp, on_spamboxreport from users where type = 'local';" | mysql -N -u $mysql_uname $mysql_dbase > /tmp/userspam.mysql;
#
#
# Do not modify anything else below here.
#
#
# For each email user in the mysql database do the following:
while read inputline
do
	email=`echo "$inputline" | cut -f1`
	path=`echo "$inputline" | cut -f2`
	reporton=`echo "$inputline" | cut -f3`
	spamdir_cur=$path/$spamfolder/cur/*
	spamdir_new=$path/$spamfolder/new/*

	if [ "$reporton" = "1" ]; then

		# Start writing the report with a title.
                echo > /tmp/spamfile1;
                echo >> /tmp/spamfile1;
                echo "Spambox Report For: "$email >> /tmp/spamfile1;
		echo >> /tmp/spamfile1;

		# Processing "cur" (read) mail first.
		# Extract the Subject header, From header and Date Header preceded by the file name for each email in the spambox
                # using the standard output line from the grep command.
		box_empty="Y"
		if [ `ls $spamdir_cur 2>/dev/null | wc -l` -gt 0 ]; then
			for file in $spamdir_cur; do
			{
			   # Do not print spam that has been marked for deletion.
			   if [ `ls $file | grep ".*:2,.*T.*" 2>/dev/null | wc -l` -eq 0 ]; then
				echo >> /tmp/spamfile1;
				grep -s -m 1 "^Date:" $file >> /tmp/spamfile1;
				grep -s -m 1 "^From:" $file >> /tmp/spamfile1;
                		grep -s -m 1 "^Subject: " $file >> /tmp/spamfile1;
				box_empty="N";
			   fi
			} done
		fi

		# Processing "new" (unread) mail next.
		# Extract the Subject header, From header and Date Header preceded by the file name for each email in the spambox
                # using the standard output line from the grep command.

		 if [ `ls $spamdir_new 2>/dev/null | wc -l` -gt 0 ]; then
			for file in $spamdir_new; do
			{
				echo >> /tmp/spamfile1;
				grep -s -m 1 "^Date:" $file >> /tmp/spamfile1;
				grep -s -m 1 "^From:" $file >> /tmp/spamfile1;
				grep -s -m 1 "^Subject: " $file >> /tmp/spamfile1;
			} done
			box_empty="N";
		fi

		# Finish writing the report with a trailer
		echo >> /tmp/spamfile1;
		echo "End Of Spambox Report" >> /tmp/spamfile1;	
		echo >> /tmp/spamfile1;
		echo "Use webmail to check your spambox at: "$webmailurl >> /tmp/spamfile1;
	
		# Specify what to do with the output.
		# First, only send spamreport if the spam box is not empty.
		if [ "$box_empty" = "N" ]; then
			# Just cat the report while testing. Then, when live, email the report to each user:
			# cat /tmp/spamfile1;
			cat /tmp/spamfile1 | $mailcommand -s "Spambox Report for: "$email -r $fromadd $email;
		fi
	fi

done < /tmp/userspam.mysql

# Clean up temporary files
rm /tmp/spamfile1 /tmp/userspam.mysql > /dev/null 2>&1;

exit 0;
